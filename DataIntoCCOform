/************************************************************************************************/
/*  PURPOSE: Transform extracted case data into Case-Crossover form (Individual level) */
/*  Paper: Nature Communication (2024) */
/*  Programmer: Jinah Park and Cinoo Kang from Seoul National University*/
/*  Program: SAS */
/************************************************************************************************/

libname rout "/userdata11/room626/data_out/data_out";
libname rstore"/userdata11/room626/data_out/data_store";
libname jp "/userdata11/room626/data_out/JP";
libname nhis "/userdata11/room626/data_source/user_data";

/***************************************************************************************
*** 1. Study Population *******************************************************************
***************************************************************************************/
/*   1) Inclusion: All beneficiaries with and without disabilities */
/*   2) Exclusion: N/A (depending on your research purpose) */


/***************************************************************************************
*** 2. Outcome *************************************************************************
***************************************************************************************/
/*   1) Admissions through the emergency department visit */

data step0; set jp.t20_ed; run;
/*example format of t20_ed can be found on the example data form*/

data episode1; set step0;
	strt_time=input(mdcare_strt_dt, YYMMDD8.); /*Convert to a SAS date variable for date calculation.*/
	end_time=strt_time+mdcare_dd_cnt-1; /Date calculation: Discharge Date = Admission Date + Total Length of Stay - 1*/
	mdcare_end_dt=put(end_time, YYMMDDN8.); /*Temporary variable to check the discharge date in YYYYMMDD format.*/

	end_time_lag1=lag1(end_time); /*Pass the discharge date information to the next row to compare with the admission date of the next record.*/
		*To verify if it is the same admission. If the discharge date and the new admission date are the same, it will be considered a continuation of the admission.;
RUN;

data episode2; set episode1;
	if first.indi_dscm_no=1 then end_time_lag1=.; by indi_dscm_no;
	time_diff=strt_time-end_time_lag1;
run;

data episode3; set episode2;
	time_diff_abs=abs(time_diff); /*날짜 차이의 절대값*/
	if (time_diff_abs NE .) and (time_diff_abs <3) then delete; /*Keep the first record for each ID(.) and only keep the records where the date difference exceeds 3 days.*/
  *The number of days within which a revisit is excluded can vary depending on the researcher's operational definition. This code specifies 3 days.;
RUN;
/*proc freq data=episode3; tables time_diff; run;*/

*입원에피소드를 고려한 최종 대상자-OUTCOME 데이터;
data data_o; set episode3;
	keep indi_dscm_no--disable;
	run;


/***************************************************************************************
*** 3. Exposure ************************************************************************
***************************************************************************************/
*Connect to another point in time that corresponds to the same year, same month, and same day of the week as the admission time.;

data step1; set uc1;
	EVENT_DT=INPUT(MDCARE_STRT_DT, YYMMDD8.); /*Create a SAS date variable for calculating YEAR, MONTH, and WEEKDAY.*/
	EVENT_YEAR=YEAR(EVENT_DT); /*Admission year*/
	EVENT_MONTH=MONTH(EVENT_DT); /*Admission month*/
	EVENT_WEEKDAY=WEEKDAY(EVENT_DT);  /*Admission day of week*/
RUN;

data date_base_table;
	DATE_START="20060101"; /*(Start year) Adjustable based on the study.*/
	DATE_END="20211231"; /*(End year) Adjustable based on the study.*/
	DT_ST=INPUT(DATE_START, YYMMDD8.);
	DT_TO=INPUT(DATE_END, YYMMDD8.);

	DO DT=DT_ST TO DT_TO;
			DATE=PUT(DT,YYMMDDN8.);
			YEAR=YEAR(DT);
			MONTH=MONTH(DT);
			WEEKDAY=WEEKDAY(DT);
			OUTPUT;
	END;
	DROP DATE_START DATE_END DT_ST DT_TO DT;
RUN;

*Assign same month and day of week;
proc sql; create table step2 as
	select A.*
					, B.DATE AS MATCHED_DATE
					, CASE WHEN A.MDCARE_STRT_DT=B.DATE THEN 1 ELSE 0 END AS CASE_YN /*입원날은 1, 그 외 대조일은 0*/
					, CASE WHEN A.MDCARE_STRT_DT=B.DATE THEN 1 ELSE 2 END AS TIME /*입원날은 1, 그 외 대조일은 2*/

	from step1 as a left join date_base_table as b
	on a.event_year=b.year & a.event_month=b.month & a.event_weekday=b.weekday
		/*only on days where the year, month, and weekday are the same*/
	order by a.indi_dscm_no, a.mdcare_strt_dt, case_yn desc;

quit;
/*Generate 5 rows. The CASE DAY will be on the first row, with the remaining 4 CONTROL DAYS generated.*/


/***************************************************************************************
*** 5. Final DB ************************************************************************
***************************************************************************************/
data jp.ed_longform; set step2;

		/*Assign new independent IDs (sequentially numbered)*/
		RETAIN ID 0;
		IF CASE_YN=1 THEN ID=ID+1;

RUN;

DATA temp; set jp.ed_longform;
	drop std_yyyy hsptz_path_type ed_rc_tot_amt dth_assmd_dt dth_yyyy dthdt cdx_dt fu_year coviddt event_dt--event_weekday; run;
